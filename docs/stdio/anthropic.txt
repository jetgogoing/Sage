# Anthropic 模型上下文协议 (Model Context Protocol, MCP) 与 MCP 连接器综合信息

---

## 信息来源 1: Model Context Protocol (MCP) 概览

**网址:** https://docs.anthropic.com/en/docs/claude-code/mcp

### 协议定义
模型上下文协议 (Model Context Protocol, MCP) 是一种开放协议，它使大型语言模型（LLM）能够接入外部的工具和数据源。MCP 遵循一个客户端-服务器架构，其中 Claude Code 作为客户端，可以连接到一个或多个专门的服务器。

### 主要特性
* **实时通信:** Claude Code 支持 SSE (Server-Sent Events) 和可流式传输的 HTTP (Streamable HTTP) 服务器，以实现客户端和服务器之间的实时通信。
* **配置范围 (Scope Levels):** 您可以在三个不同的层级上配置 MCP 服务器，以适应不同的需求：
    * **本地范围 (Local scope):** 这是私有的服务器，仅在当前项目目录中可访问。这个范围非常适合个人开发服务器或包含敏感凭证的配置。
    * **项目范围 (Project scope):** 通过项目中的 `.mcp.json` 文件，服务器可以与项目中的每个人共享，从而促进团队协作。
    * **用户范围 (User scope):** 服务器在您机器上的所有项目中都可用，适用于个人工具和常用工具。
* **配置优先级:** 配置的优先级非常明确：本地范围的服务器会覆盖项目范围的服务器，而项目范围的服务器会覆盖用户范围的服务器。
* **服务器管理:** 您可以使用一系列命令来管理您的 MCP 服务器，例如 `claude mcp add`, `claude mcp list`, `claude mcp get`, 和 `claude mcp remove`。
* **认证支持:** 对于需要认证的远程服务器，Claude Code 支持 OAuth 2.0 流程。
* **资源与提示:** MCP 服务器可以暴露可以被 `@` 符号引用的资源，以及可以作为斜杠命令 (`/`) 使用的提示。

---

## 信息来源 2 & 3: MCP 连接器 (MCP Connector)

**网址:** https://docs.anthropic.com/en/docs/agents-and-tools/mcp-connector

### 功能介绍
模型上下文协议 (MCP) 连接器是 Claude 的一项功能，它允许通过 Messages API **直接连接**到远程的 MCP 服务器，从而**无需**开发者实现一个独立的 MCP 客户端。这项功能目前处于测试版 (beta)，使用时需要在请求头中加入 `"anthropic-beta": "mcp-client-2025-04-04"`。

### 核心优势
* **直接 API 集成:** 无需实现单独的 MCP 客户端即可连接到 MCP 服务器。
* **工具调用支持:** 允许通过 Messages API 访问 MCP 服务器上定义的工具。
* **OAuth 认证:** 对于需要认证的服务器，支持传递 OAuth Bearer 令牌。
* **连接多个服务器:** 允许在单次 API 请求中连接到多个 MCP 服务器。

### 当前限制
* 目前仅支持 MCP 规范中定义的工具调用功能。
* 服务器必须可以通过 HTTP 公开访问（支持 Streamable HTTP 和 SSE 两种传输方式）。
* 无法直接连接到本地的 STDIO 服务器。
* 目前在 Amazon Bedrock 和 Google Vertex 平台上不支持 MCP 连接器。

### 如何使用 MCP 连接器
要在 Messages API 请求中使用此功能，您需要在请求体中包含 `mcp_servers` 参数。`mcp_servers` 是一个数组，其中每个服务器对象都可以配置以下属性：
* `type`: 服务器类型。
* `url`: 服务器的 URL。
* `name`: 服务器的名称。
* `tool_configuration`: 工具的配置。
* `authorization_token`: 用于认证的令牌。

### API 响应
当 Claude 使用了 MCP 工具后，API 的响应中会包含两种新的内容块类型：
* `mcp_tool_use`: 详细描述了正在使用的工具、其所在的服务器以及传递给工具的输入参数。
* `mcp_tool_result`: 提供了工具执行后返回的结果。

### 关于 OAuth 认证
对于需要 OAuth 认证的 MCP 服务器，API 的使用者需要负责管理整个 OAuth 流程，包括获取和刷新访问令牌 (access token)。获取到令牌后，可以通过 `authorization_token` 字段在服务器定义中传递给 Claude。为了方便测试，可以使用 MCP 检查器 (inspector) 来帮助获取访问令牌。