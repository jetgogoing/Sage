version: '3.8'

services:
  sage-app:
    build: 
      context: .
      dockerfile: Dockerfile.simple
    container_name: sage-docker-app
    restart: always
    ports:
      - "17800:17800"
    depends_on:
      sage-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://sage_user:sage_secure_password_2025@sage-docker-db:5432/sage_memory
      - SILICONFLOW_API_KEY=${SILICONFLOW_API_KEY}
      - DB_HOST=sage-docker-db
      - DB_PORT=5432
      - DB_NAME=sage_memory
      - DB_USER=sage_user
      - DB_PASSWORD=sage_secure_password_2025
      - MCP_SERVER_PORT=17800
      - MCP_SERVER_HOST=0.0.0.0
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache
    networks:
      - sage-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:17800/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sage-db:
    image: pgvector/pgvector:pg16
    container_name: sage-docker-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"  # 使用 5433 避免与现有数据库冲突
    volumes:
      - sage-db-data:/var/lib/postgresql/data
      - ./init-pgvector.sql:/docker-entrypoint-initdb.d/01-init-pgvector.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sage-net

volumes:
  sage-db-data:
    name: sage-docker-db-data

networks:
  sage-net:
    name: sage-docker-net
    driver: bridge