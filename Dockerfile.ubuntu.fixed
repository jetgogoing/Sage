# Sage MCP 完整功能版 - Ubuntu 22.04 LTS (修复版)
# 使用 SiliconFlow 云端 API，包含所有核心功能

FROM ubuntu:22.04

# 设置环境变量，避免交互式提示
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

# 安装基础依赖和添加 PostgreSQL 官方仓库
RUN apt-get update && apt-get install -y \
    # 基础工具
    wget \
    ca-certificates \
    lsb-release \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

# 添加 PostgreSQL 官方 APT 仓库
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list

# 安装系统依赖（包括 PostgreSQL 15）
RUN apt-get update && apt-get install -y \
    # Python 3.10
    python3.10 \
    python3.10-dev \
    python3-pip \
    # PostgreSQL 15 和 pgvector
    postgresql-15 \
    postgresql-client-15 \
    postgresql-contrib-15 \
    postgresql-server-dev-15 \
    # 构建工具
    build-essential \
    git \
    curl \
    # 系统工具
    sudo \
    supervisor \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# 安装 pgvector 扩展
RUN cd /tmp && \
    git clone --branch v0.5.1 https://github.com/pgvector/pgvector.git && \
    cd pgvector && \
    make && \
    make install && \
    cd / && \
    rm -rf /tmp/pgvector

# 创建工作目录
WORKDIR /app

# 升级 pip
RUN python3 -m pip install --upgrade pip

# 安装 Python 依赖
COPY requirements-cloud.txt .
RUN pip3 install --no-cache-dir -r requirements-cloud.txt

# 复制所有核心功能模块
COPY sage_core /app/sage_core
COPY sage_mcp_stdio_v3.py /app/
COPY memory.py /app/
COPY intelligent_retrieval.py /app/
COPY reranker_qwen.py /app/
COPY config_manager.py /app/
COPY memory_interface.py /app/
COPY async_manager.py /app/
COPY platform_utils.py /app/
COPY exceptions.py /app/
COPY sage_session_manager_v2.py /app/
COPY sage_memory_analyzer.py /app/
COPY sage_error_handler.py /app/
COPY prompt_enhancer.py /app/

# 复制数据库初始化脚本
COPY docker/ubuntu/init-db.sql /docker-entrypoint-initdb.d/

# 复制启动脚本
COPY docker/ubuntu/entrypoint.sh /entrypoint.sh
COPY docker/ubuntu/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
RUN chmod +x /entrypoint.sh

# 创建必要的目录和用户
RUN useradd -m -s /bin/bash sage && \
    mkdir -p /var/lib/postgresql/data /var/log/sage /var/run/postgresql && \
    chown -R postgres:postgres /var/lib/postgresql /var/run/postgresql && \
    chown -R sage:sage /var/log/sage /app && \
    chmod 755 /var/run/postgresql

# 设置环境变量
ENV PYTHONPATH=/app
ENV SAGE_ENV=production
ENV DB_HOST=localhost
ENV DB_PORT=5432
ENV DB_NAME=sage
ENV DB_USER=sage
ENV DB_PASSWORD=sage
ENV SAGE_USE_CLOUD_API=true

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD pg_isready -h localhost -p 5432 -U postgres || exit 1

# 启动
ENTRYPOINT ["/entrypoint.sh"]