# Sage MCP 网络安全配置
# 此文件定义容器网络策略和安全规则

# ===========================================
# Docker网络配置
# ===========================================

# 网络策略说明:
# 1. sage-mcp容器使用默认bridge网络
# 2. MCP通信通过STDIO协议，无需暴露网络端口
# 3. PostgreSQL仅在开发调试时暴露5432端口
# 4. 生产环境建议使用自定义网络隔离

# 推荐的生产环境网络配置:
# 创建自定义网络隔离容器
# docker network create --driver bridge sage-network

# 在docker-compose.yml中使用:
# networks:
#   sage-network:
#     external: true
# 
# services:
#   sage-mcp:
#     networks:
#       - sage-network

# ===========================================
# 端口映射安全策略
# ===========================================

# 开发环境端口映射:
# - 5432:5432  # PostgreSQL调试端口

# 生产环境端口映射:
# - 无端口映射（推荐）
# - 或仅绑定到localhost: 127.0.0.1:5432:5432

# ===========================================
# 防火墙规则建议（主机级别）
# ===========================================

# Ubuntu/Debian系统使用ufw:
# sudo ufw default deny incoming
# sudo ufw default allow outgoing
# sudo ufw allow ssh
# sudo ufw allow from 127.0.0.1 to any port 5432  # 仅本地访问PostgreSQL
# sudo ufw enable

# CentOS/RHEL系统使用firewalld:
# sudo firewall-cmd --set-default-zone=drop
# sudo firewall-cmd --zone=public --add-service=ssh --permanent
# sudo firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="127.0.0.1" port protocol="tcp" port="5432" accept' --permanent
# sudo firewall-cmd --reload

# macOS系统使用pfctl:
# 创建 /etc/pf.conf 规则文件

# ===========================================
# 容器间通信安全
# ===========================================

# 1. 容器内部服务通信使用localhost
# 2. 避免跨容器直接网络访问
# 3. 使用环境变量传递连接信息
# 4. 定期检查开放端口: netstat -tulpn

# ===========================================
# MCP STDIO通信安全
# ===========================================

# MCP协议特点:
# 1. 通过标准输入输出(STDIO)通信
# 2. 无需网络端口，天然安全隔离
# 3. 与Claude CLI通过进程间通信
# 4. 数据传输在本地系统内完成

# 安全验证命令:
# docker exec sage-mcp netstat -tulpn  # 检查监听端口
# docker exec sage-mcp ps aux          # 检查运行进程

# ===========================================
# 网络监控建议
# ===========================================

# 1. 定期检查容器网络连接:
#    docker exec sage-mcp ss -tulpn
#
# 2. 监控网络流量:
#    docker stats sage-mcp
#
# 3. 检查DNS解析:
#    docker exec sage-mcp nslookup localhost
#
# 4. 验证内部连接:
#    docker exec sage-mcp pg_isready -h localhost -p 5432

# ===========================================
# 安全最佳实践
# ===========================================

# 1. 最小权限原则:
#    - 仅暴露必要端口
#    - 使用非特权用户运行容器
#    - 限制容器资源使用

# 2. 网络隔离:
#    - 使用自定义Docker网络
#    - 避免使用host网络模式
#    - 配置适当的网络策略

# 3. 定期安全审计:
#    - 检查开放端口
#    - 监控网络连接
#    - 更新安全补丁

# 4. 日志监控:
#    - 记录网络访问日志
#    - 监控异常连接
#    - 设置告警机制