# 阶段1: 构建阶段
FROM python:3.12-slim as builder

# 安装构建依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /build

# 复制依赖文件
COPY requirements.txt .

# 安装pip和setuptools
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# 安装依赖
RUN pip install --no-cache-dir -r requirements.txt

# 阶段2: 运行阶段
FROM python:3.12-slim

# 安装运行时依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 创建非root用户
RUN useradd -m -u 1000 sage

# 设置工作目录
WORKDIR /app

# 从构建阶段复制Python包
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages

# 复制应用代码（排除不必要的文件）
COPY --chown=sage:sage memory.py memory_interface.py exceptions.py ./
COPY --chown=sage:sage app/ ./app/
COPY --chown=sage:sage sage_mcp_stdio.py ./

# 设置环境变量
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# 切换到非root用户
USER sage

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:17800/health || exit 1

# 暴露端口
EXPOSE 17800

# 启动命令
CMD ["python", "-m", "uvicorn", "app.sage_mcp_server:app", "--host", "0.0.0.0", "--port", "17800"]
