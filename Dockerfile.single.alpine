# Sage MCP Single Container - Alpine Optimized (<500MB)
# Using Alpine Linux for minimal size

FROM python:3.10-alpine

# Install build dependencies temporarily
RUN apk add --no-cache --virtual .build-deps \
    gcc \
    musl-dev \
    postgresql-dev \
    libffi-dev \
    && apk add --no-cache \
    postgresql15 \
    postgresql15-contrib \
    postgresql15-dev \
    su-exec \
    bash \
    git \
    make \
    g++

# Install pgvector
RUN cd /tmp \
    && git clone --branch v0.5.1 https://github.com/pgvector/pgvector.git \
    && cd pgvector \
    && make PG_CONFIG=/usr/bin/pg_config \
    && make install PG_CONFIG=/usr/bin/pg_config \
    && cd / \
    && rm -rf /tmp/pgvector

# Create directories and users
RUN mkdir -p /run/postgresql /var/log/sage /var/lib/sage \
    && adduser -D -s /bin/bash sage \
    && chown postgres:postgres /run/postgresql \
    && chown -R sage:sage /var/log/sage /var/lib/sage

# Install Python dependencies
WORKDIR /app
COPY requirements-minimal.txt .
RUN pip install --no-cache-dir -r requirements-minimal.txt \
    && pip cache purge

# Remove build dependencies
RUN apk del .build-deps

# Copy application code
COPY sage_core /app/sage_core
COPY sage_mcp_stdio_single.py /app/

# Copy initialization scripts
COPY docker/single/init-db.sql /docker-entrypoint-initdb.d/
COPY docker/single/entrypoint-alpine.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Environment variables
ENV PGDATA=/var/lib/postgresql/data \
    PATH="/usr/libexec/postgresql15:$PATH" \
    SAGE_DB_HOST=localhost \
    SAGE_DB_PORT=5432 \
    SAGE_DB_NAME=sage \
    SAGE_DB_USER=sage \
    SAGE_DB_PASSWORD=sage \
    SAGE_LOG_DIR=/var/log/sage \
    SAGE_USE_HASH_VECTORIZER=true \
    PYTHONUNBUFFERED=1

# Configure PostgreSQL
RUN mkdir -p /var/lib/postgresql/data \
    && chown -R postgres:postgres /var/lib/postgresql \
    && chmod 750 /var/lib/postgresql/data

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD su-exec postgres pg_isready -h localhost -p 5432 || exit 1

# Entry point
ENTRYPOINT ["/entrypoint.sh"]